/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package POS;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aquino.Jay R
 */
public class formCustomer extends javax.swing.JPanel {
    DefaultTableModel model;
    
    /**
     * Creates new form formCustomer
     */
    public formCustomer() {
        initComponents();
        refresh_huh();
        table.setComponentPopupMenu(popup);
    }
    
    public boolean duplicate_bruh(String name){
        boolean i = false ;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos_1", "root", "");
            Statement st = con.createStatement();
        
            // Construct the SQL query with parameters
            String sql = "SELECT * FROM cus_table WHERE name = '" + name + "'";
           
             // Execute the query
            ResultSet rs = st.executeQuery(sql);

            // Check if there are duplicate records
            if (rs.next()) {
                System.out.println("Duplicates found");
                JOptionPane.showMessageDialog(this, "Duplicates found! \n User: "+ name);
                
                // Close ResultSet, Statement, and Connection
                rs.close();
                st.close();
                con.close();
                i = false;
                
                // Handle duplicate records here
            } else {
                System.out.println("No Duplicates, Good");
            
                // Close ResultSet, Statement, and Connection
                rs.close();
                st.close();
                con.close();
                i = true;
                
            }

            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return i;
    }
    
    public void refresh_huh(){
        try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos_1","root","");
                Statement st = con.createStatement();
                String sql = "select * from cus_table";
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                int i = 1;
                model.setRowCount(0);
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    model.addRow(new Object[]{
                        false,
                        i,
                        rs.getString(2),
                        rs.getString(3),
                        rs.getString(4),
                        rs.getString(5),
                    });
                    i++;
                }
                rs.close();
                st.close();
                con.close();
                System.out.println("Connection Good");
            }catch(Exception e){
                System.out.println(e.getMessage());
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        popup = new javax.swing.JPopupMenu();
        edit = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btn_rmv = new javax.swing.JButton();
        btn_rmv_all = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        btn_add = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btn_add1 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FORMS/OIP (1).jpg"))); // NOI18N
        edit.setText("EDIT");
        edit.setToolTipText("");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        popup.add(edit);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 153), 3, true), "CUSTOMER", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 24), new java.awt.Color(255, 0, 0))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(102, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true), "List of Customer", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("OCR A Extended", 0, 20), new java.awt.Color(255, 51, 51))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Num", "Name", "Contacts", "Address", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.setToolTipText("");
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(25);
            table.getColumnModel().getColumn(0).setPreferredWidth(25);
            table.getColumnModel().getColumn(0).setMaxWidth(25);
            table.getColumnModel().getColumn(1).setMinWidth(40);
            table.getColumnModel().getColumn(1).setPreferredWidth(40);
            table.getColumnModel().getColumn(1).setMaxWidth(40);
        }

        btn_rmv.setText("Remove");
        btn_rmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rmvActionPerformed(evt);
            }
        });

        btn_rmv_all.setText("Remove All");
        btn_rmv_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rmv_allActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        btn_print.setText("PRINT");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refresh)
                .addGap(18, 18, 18)
                .addComponent(btn_print)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_rmv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_rmv_all)
                .addGap(8, 8, 8))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_rmv)
                    .addComponent(btn_rmv_all)
                    .addComponent(refresh)
                    .addComponent(btn_print))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 0), 3), "Customer Info", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("OCR A Extended", 0, 20), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Myriad Pro", 1, 18)); // NOI18N
        jLabel2.setText("NAME:");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        btn_add.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_add.setText("ADD");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Myriad Pro", 1, 18)); // NOI18N
        jLabel3.setText("CONTACT:");

        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Myriad Pro", 1, 18)); // NOI18N
        jLabel4.setText("ADDRESS:");

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        gender.setSelectedItem(null);
        gender.setToolTipText("");
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Myriad Pro", 1, 18)); // NOI18N
        jLabel5.setText("GENDER:");

        btn_add1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_add1.setText("CLEAR");
        btn_add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(name)
                            .addComponent(contact)
                            .addComponent(address)
                            .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_add1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_add1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_rmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rmvActionPerformed
        // TODO add your handling code here:
        int c = JOptionPane.showConfirmDialog(this, "Are you sure ?", "CONFIRMATION",0);
        if(c == 0 ){
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos_1", "root", "");
                Statement st = con.createStatement();
            
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                int rowCount = model.getRowCount();
    
                // Iterate through each row in the table
                for(int i = 0; i < rowCount ; i++){
                    boolean isChecked = (boolean) model.getValueAt(i, 0); // Assuming checkbox is in the first column
                    if(isChecked){
                        String name = model.getValueAt(i, 2).toString(); // Assuming name is in the third column
                        // Construct and execute the SQL delete statement
                        String sql = "DELETE FROM cus_table WHERE name = '" + name + "'"; 
                        int rowsAffected = st.executeUpdate(sql);
                        System.out.println(rowsAffected + " row(s) deleted.");
                    }
                }
    
                con.close();
            
            //  DELETE shit
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                System.out.println("Error: " + e.getMessage());
            }
        refresh_huh();
        }
    }//GEN-LAST:event_btn_rmvActionPerformed

    private void btn_rmv_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rmv_allActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Are you sure ?", "CONFIRMATION",0);
        if(i == 0 ){
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos_1", "root", "");
                Statement st = con.createStatement();
                // TARA DELETE NA
                String sql = "DELETE FROM cus_table";
                int rowsAffected = st.executeUpdate(sql); 
                System.out.println(rowsAffected + " rows deleted.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                System.out.println("Error: " + e.getMessage());
        }
        refresh_huh();
        }
    }//GEN-LAST:event_btn_rmv_allActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Are you sure ?", "CONFIRMATION",0);
        if(i == 0 && duplicate_bruh(name.getText())){
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos_1","root","");
                Statement st = con.createStatement();
                String sql = "insert into cus_table values('1',"
                        + "'"+name.getText()+"',"
                        + "'"+contact.getText()+"',"
                        + "'"+address.getText()+"',"
                        + "'"+gender.getSelectedItem().toString()+"')";
                st.execute(sql);
                System.out.println("Good");
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                System.out.println(e.getMessage());
            }
        }
        refresh_huh();
    }//GEN-LAST:event_btn_addActionPerformed

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        refresh_huh();
    }//GEN-LAST:event_refreshActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
    
        if (selectedRow >= 0) {
            // get values' in the Table
            String name_ = table.getValueAt(selectedRow, 2).toString();
            String contact_ = table.getValueAt(selectedRow, 3).toString();
            String address_ = table.getValueAt(selectedRow, 4).toString();
            String gender_ = table.getValueAt(selectedRow, 5).toString();
            
            frmMain.old_name = name_;
            
            // create a object and set the values on the textfields
            formEdit fe = new formEdit((JFrame)SwingUtilities.getWindowAncestor(this), true);
            
            // set value on textfields on edit
            fe.name.setText(name_);
            fe.contact.setText(contact_);
            fe.address.setText(address_);
            fe.gender.setSelectedItem(gender_);
            
        
            // display the formEdit dialog
            fe.setLocationRelativeTo(this);
            fe.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No row selected.");
        }
    }//GEN-LAST:event_editActionPerformed
    
    void Printing(){
        try {
            
            PrinterJob job = PrinterJob.getPrinterJob();
            PageFormat format = job.defaultPage();
            job.defaultPage(format);
            Paper paper = new Paper();
            double margin = 24;
            paper.setImageableArea(margin,margin,paper.getWidth() - margin*2,paper.getHeight()- margin*2);
            paper.setSize(8.5,13);
            format.setPaper(paper);
            
            job.setPrintable(new formCustomer.PrintObject(), format);
            if(job.printDialog()){
                job.print();
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    public class PrintObject implements Printable{
        public int print(Graphics g, PageFormat f, int pageIndex){
            
            int start = pageIndex * 10;
            int end = start + 10;
            
            try{

                Graphics2D g2 = (Graphics2D) g;

                //image icon display
                ImageIcon printImage = new javax.swing.ImageIcon("./src/POS/icons8-report-20.png");
                g2.drawImage(printImage.getImage(), 275, 25, printImage.getIconWidth(), printImage.getIconHeight(), null);

                //header display
                g2.setFont(new Font("Arial", Font.BOLD, 15));
                g2.drawString("A&A", 300, 40);
                g2.setFont(new Font("Arial", Font.BOLD, 10));
                g2.drawString("Customer Records", 270, 55);

                //margin design
                g2.drawLine(25, 35, 250, 35);//hor top left
                g2.drawLine(350, 35, 575, 35);//hor top right
                //-----------------
                g2.drawLine(25, 750, 200, 750);//hor bot left
                g2.drawLine(400, 750, 575, 750);//hor bot right
                //-----------------
                g2.drawLine(25, 35, 25, 750);//ver left
                g2.drawLine(575, 35, 575, 750);//ver right

                //First table row display "border"
                g2.drawLine(50, 70, 550, 70);//hor top
                g2.drawLine(50, 90, 550, 90);//hor bot
                g2.drawLine(50, 70, 50, 90);//ver left
                g2.drawLine(550, 70, 550, 90);//ver right

                //Collums Line "vertical or Y axis"
                g2.drawLine(75, 70, 75, 90);
                g2.drawLine(194, 70, 194, 90);
                g2.drawLine(313, 70, 313, 90);
                g2.drawLine(432, 70, 432, 90);

                //record's display
                g2.setFont(new Font("Roboto", Font.BOLD, 11));
                g2.drawString("No", 55, (float) 84);            //no
                g2.drawString("Name", 80, (float) 84);          //name
                g2.drawString("Contact", 199, (float) 84);      //contact
                g2.drawString("Address", 318, (float) 84);      //address
                g2.drawString("Gender", 437, (float) 84);       //gender

                //my loop and find error
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos_1","root","");
                Statement st = con.createStatement();
                String sql = "select * from cus_table";
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                int i = 0;
                int x = 0;
                int height_a = 70;
                int height_b = 90;
                int height_c = 84;
                model.setRowCount(0);
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    
                    i++;
                    
                    if (i >= start + 1 && i <= end) {
                        x++;
                        height_a+=20;
                        height_b+=20;
                        height_c+=20;

                        //Second table row display "border" without the top line 
                        g2.drawLine(50, height_b, 550, height_b);   //hor bot
                        g2.drawLine(50, height_a, 50, height_b);    //ver left
                        g2.drawLine(550, height_a, 550, height_b);  //ver right

                        //Collums Line "vertical or Y axis"
                        g2.drawLine(75, height_a, 75, height_b);
                        g2.drawLine(194, height_a, 194, height_b);
                        g2.drawLine(313, height_a, 313, height_b);
                        g2.drawLine(432, height_a, 432, height_b);

                        //record's display
                        g2.setFont(new Font("Roboto", Font.PLAIN, 10));
                        g2.drawString(Integer.toString(i), 55, (float) height_c);   //no
                        g2.drawString(rs.getString(1), 80, (float) height_c);       //id
                        g2.drawString(rs.getString(2), 199, (float) height_c);      //name
                        g2.drawString(rs.getString(3), 318, (float) height_c);      //decription
                        g2.drawString(rs.getString(4), 437, (float) height_c);      //brand
                    }
                    
                }
                
                //Footer Display
                g2.setFont(new Font("Roboto", Font.BOLD, 10));
                g2.drawString("By : Jay R Aquino", 260, 750);
                g2.drawString("Maximum Display of "+ end +"/"+ i +" records", 225, 760);
                
                // Footer page
                g2.setFont(new Font("Roboto", Font.BOLD, 10));
                g2.drawString("Page " + ( pageIndex + 1 ), 540, 760);

                rs.close();
                st.close();
                con.close();
                System.out.println(" Connection Good "+ pageIndex);
                
                if (start < i) {
                    System.out.print(" Page YES have been runned ");
                    return PAGE_EXISTS;
                } else {
                    System.out.print("PAGE NO have been runned");
                    return NO_SUCH_PAGE;
                }

            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage());
                System.out.println("Error: " + e.getMessage());
            }
            System.out.println("Missed The Condition");
            return PAGE_EXISTS;
        }
    }
    
    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Are you sure ?", "CONFIRMATION",0);
        if(i == 0 ){
            Printing();
            refresh_huh();
        }
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add1ActionPerformed
        // TODO add your handling code here:
        name.setText("");
        contact.setText("");
        address.setText("");
        gender.setSelectedIndex(-1);
    }//GEN-LAST:event_btn_add1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_add1;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_rmv;
    private javax.swing.JButton btn_rmv_all;
    private javax.swing.JTextField contact;
    private javax.swing.JMenuItem edit;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JButton refresh;
    public javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    JTable getTable() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
